/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the top of the
 * compiled file, but it's generally better to create a new file per style scope.
 *
 *= require_self
 *= require_tree .
 */
/*!
 * Bootstrap v3.1.1 (http://getbootstrap.com)
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

/*! normalize.css v3.0.0 | MIT License | git.io/normalize */

/*All SASS Variables go before @import "bootstrap"*/
@import "bootstrap";
@import url(http://fonts.googleapis.com/css?family=Vidaloka);

body {
     background: url('https://s3.amazonaws.com/craps_buzz/craps_buzz.jpg');
      height: 100%;
      margin: 0;
      overflow-x: hidden;
      overflow-y: auto;
      background-size:2200px auto;
      padding: 0;
      width: 100%;
      background-image: url("https://s3.amazonaws.com/craps_buzz/craps_buzz.jpg");
      background-repeat: no-repeat;
      background-position: top center;
      background-attachment: fixed;       
}

.container {
  position: absolute;
  top: 5%;
  left: 0;
  right: 0;
}

.come_bet_numbers {
  width: 100%;
}

.well_window {
   background-color: rgba(245, 245, 245, 0.4);
  -webkit-filter: blur(5px);
  -moz-filter: blur(5px);
  -o-filter: blur(5px);
  -ms-filter: blur(5px);
  filter: blur(5px);
}

.well {
  padding: 5px;
}

.come_bet_button {
  width: 100%;
}

.darkside_colors {
  color: white;
  background-color: black;
}

.double_wide {
  height: 50px;
  width: 116px;
}

.point_num_font_darkside {
  font-family: 'Vidaloka', serif;
  text-align: center;
  font-weight: bold;
  color: white;
}

.field_num_size {
  font-size: 12px;
}

.point_num_size {
  font-size: 24px;
}

.point_num_font {
  font-family: 'Vidaloka', serif;
  text-align: center;
  font-weight: bold;
  color: black;
}

.dealer_calls {
  text-align: center;
}

.disclaimer_for_game {
  font-size: 10px;
  text-align: center;
}

.dont_come_bar {
  color: #fff;
  background-color: #428bca;
  border-color: #357ebd;
}

.point_numbers {
  min-width: 50px;
}

//.btn-default {
//  min-width: 56px;
//}

$grid-float-breakpoint:     480px;
// Bootstrap Mid-Small - col-ms-* - the missing grid set for Bootstrap3.
//
// This is a hack to fill the gap between 480 and 760 pixels - a missing range
// in the bootstrap responsive grid structure.  Use these classes to style pages
// on cellphones when they transition from portrait to landscape.
//
// NOTE: Here I use SASS instead of LESS for styling.  To convert to LESS
// replace '$screen' with '@screen' and '$grid' with '@grid'.
//
// See https://github.com/twbs/bootstrap/issues/10203 for more info.
//
// Columns, offsets, pushes, and pulls for the ms device range, from phones
// to tablets.
//
// Note that `.col-ms-12` doesn't get floated on purposeâ€”there's no need since
// it's full-width.

// ----- common styles - from twbs/bootstrap/blob/master/less/grid.less -----

.col-ms-1,
.col-ms-2,
.col-ms-3,
.col-ms-4,
.col-ms-5,
.col-ms-6,
.col-ms-7,
.col-ms-8,
.col-ms-9,
.col-ms-10,
.col-ms-11,
.col-ms-12 {
  position: relative;
  // Prevent columns from collapsing when empty
  min-height: 1px;
  // Inner gutter via padding
  padding-left:  ($grid-gutter-width / 2);
  padding-right: ($grid-gutter-width / 2);
}

// ----- col-ms breakpoints and related classes -----

@media (min-width: $screen-xs) and (max-width: $screen-xs-max) {
.container {
max-width: ($screen-sm) - 20px;
}

  .col-ms-1,
  .col-ms-2,
  .col-ms-3,
  .col-ms-4,
  .col-ms-5,
  .col-ms-6,
  .col-ms-7,
  .col-ms-8,
  .col-ms-9,
  .col-ms-10,
  .col-ms-11 {
    float: left;
  }
  .col-ms-1  { width: percentage((1 / $grid-columns)); }
  .col-ms-2  { width: percentage((2 / $grid-columns)); }
  .col-ms-3  { width: percentage((3 / $grid-columns)); }
  .col-ms-4  { width: percentage((4 / $grid-columns)); }
  .col-ms-5  { width: percentage((5 / $grid-columns)); }
  .col-ms-6  { width: percentage((6 / $grid-columns)); }
  .col-ms-7  { width: percentage((7 / $grid-columns)); }
  .col-ms-8  { width: percentage((8 / $grid-columns)); }
  .col-ms-9  { width: percentage((9 / $grid-columns)); }
  .col-ms-10 { width: percentage((10/ $grid-columns)); }
  .col-ms-11 { width: percentage((11/ $grid-columns)); }
  .col-ms-12 { width: 100%; }

  // Push and pull columns for source order changes
  .col-ms-push-1  { left: percentage((1 / $grid-columns)); }
  .col-ms-push-2  { left: percentage((2 / $grid-columns)); }
  .col-ms-push-3  { left: percentage((3 / $grid-columns)); }
  .col-ms-push-4  { left: percentage((4 / $grid-columns)); }
  .col-ms-push-5  { left: percentage((5 / $grid-columns)); }
  .col-ms-push-6  { left: percentage((6 / $grid-columns)); }
  .col-ms-push-7  { left: percentage((7 / $grid-columns)); }
  .col-ms-push-8  { left: percentage((8 / $grid-columns)); }
  .col-ms-push-9  { left: percentage((9 / $grid-columns)); }
  .col-ms-push-10 { left: percentage((10/ $grid-columns)); }
  .col-ms-push-11 { left: percentage((11/ $grid-columns)); }

  .col-ms-pull-1  { right: percentage((1 / $grid-columns)); }
  .col-ms-pull-2  { right: percentage((2 / $grid-columns)); }
  .col-ms-pull-3  { right: percentage((3 / $grid-columns)); }
  .col-ms-pull-4  { right: percentage((4 / $grid-columns)); }
  .col-ms-pull-5  { right: percentage((5 / $grid-columns)); }
  .col-ms-pull-6  { right: percentage((6 / $grid-columns)); }
  .col-ms-pull-7  { right: percentage((7 / $grid-columns)); }
  .col-ms-pull-8  { right: percentage((8 / $grid-columns)); }
  .col-ms-pull-9  { right: percentage((9 / $grid-columns)); }
  .col-ms-pull-10 { right: percentage((10/ $grid-columns)); }
  .col-ms-pull-11 { right: percentage((11/ $grid-columns)); }

  // Offsets
  .col-ms-offset-1  { margin-left: percentage((1 / $grid-columns)); }
  .col-ms-offset-2  { margin-left: percentage((2 / $grid-columns)); }
  .col-ms-offset-3  { margin-left: percentage((3 / $grid-columns)); }
  .col-ms-offset-4  { margin-left: percentage((4 / $grid-columns)); }
  .col-ms-offset-5  { margin-left: percentage((5 / $grid-columns)); }
  .col-ms-offset-6  { margin-left: percentage((6 / $grid-columns)); }
  .col-ms-offset-7  { margin-left: percentage((7 / $grid-columns)); }
  .col-ms-offset-8  { margin-left: percentage((8 / $grid-columns)); }
  .col-ms-offset-9  { margin-left: percentage((9 / $grid-columns)); }
  .col-ms-offset-10 { margin-left: percentage((10/ $grid-columns)); }
  .col-ms-offset-11 { margin-left: percentage((11/ $grid-columns)); }
}




/*@media (max-width: 768px){
  .btn {
   font-size: 0.5em;
  }
}


/*# sourceMappingURL=bootstrap.css.map */
